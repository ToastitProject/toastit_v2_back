plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.toastit-v2'
version = '2.0.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Dev Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Spring WebFlux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // OAuth2 Client
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // I/O Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Java Mail Sender
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Java SSH2
    implementation 'com.github.mwiede:jsch:0.2.20'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // H2
    runtimeOnly 'com.h2database:h2'

    // MySQL
    implementation 'mysql:mysql-connector-java:8.0.33'

    // Spring Data Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Spring Data MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Spring Cloud for AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Spring Hateoas
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'

    // Spring Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Docs for Swagger-UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // JUnit
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Mockito
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'

    // Logback
    // implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    // Prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'

    //localStack for Aws Test
    testImplementation "org.testcontainers:localstack:1.16.3"
}

// QueryDsl Test Code 실행 시, QClass 생성
sourceSets {
    main.java.srcDirs += 'build/generated/source/apt/main'
}

// Gradle Clean 실행 시, QClass 디렉토리 삭제
clean {
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
}
